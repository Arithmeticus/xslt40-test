<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="number">
   <description>Tests number</description>
   <environment name="number-01">
      <source role="." file="number-01.xml"/>
   </environment>
   <environment name="number-02">
      <source role=".">
         <content><![CDATA[<doc>
  <ol>
    <item>aaa</item>
    <item>bbb</item>
    <item>ccc</item>
    <item>ddd</item>
  </ol>
</doc>
]]></content>
      </source>
   </environment>
   <environment name="number-03">
      <source role="." file="number-03.xml"/>
   </environment>
   <environment name="number-04">
      <source role="." file="number-04.xml"/>
   </environment>
   <environment name="number-05">
      <source role="." file="number-05.xml"/>
   </environment>
   <environment name="number-06">
      <source role=".">
         <content><![CDATA[<doc>
</doc>
]]></content>
      </source>
   </environment>
   <environment name="number-07">
      <source role="." file="number-07.xml"/>
   </environment>
   <environment name="number-08">
      <source role=".">
         <content><![CDATA[<doc>
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-09">
      <source role="." file="number-09.xml"/>
   </environment>
   <environment name="number-10">
      <source role="." file="number-10.xml"/>
   </environment>
   <environment name="number-11">
      <source role="." file="number-11.xml"/>
   </environment>
   <environment name="number-12">
      <source role=".">
         <content><![CDATA[<doc>
<a/>
<a/>
<a>
  <b/>
  <b/>
  <b>
    <c/>
  </b>
</a>  
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-13">
      <source role=".">
         <content><![CDATA[<doc>
  <p>a <citation/> and a <footnote>and a <citation/> in a
footnote</footnote> and a <citation/></p>
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-14">
      <source role=".">
         <content><![CDATA[<doc>
  <p>a <citation href="one"/> and a <footnote>and a <citation href="two"/> in a
    footnote</footnote> and a <citation href="one"/></p>
</doc>
]]></content>
      </source>
   </environment>
   <environment name="number-15">
      <source role="." file="number-15.xml"/>
   </environment>
   <environment name="number-16">
      <source role=".">
         <content><![CDATA[<lesson>
    <unit>blabla</unit>
    <unit role="tutor"/>
    <unit>flamingo</unit>
</lesson>]]></content>
      </source>
   </environment>
   <environment name="number-17">
      <source role=".">
         <content><![CDATA[<doc>
  <a>
    <a/>
  </a>
  <a>
    <b/>
  </a>
  <a>
    <a/>
  </a>
  <a>
    <b/>
    <b/>
  </a>  
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-18">
      <source role=".">
         <content><![CDATA[<doc>
  <a mark="true"/>
  <a/>
  <a/>
  <a/>
  <a mark="true"/>
  <a/>
  <a/>
  <a/>   
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-19">
      <source role=".">
         <content><![CDATA[<root>
   <foo bar="a">1</foo>
   <foo bar="b">2</foo>
   <foo bar="a">3</foo>
</root>]]></content>
      </source>
   </environment>
   <environment name="number-20">
      <source role="." file="number-20.xml"/>
   </environment>
   <environment name="number-21">
      <source role=".">
         <content><![CDATA[<doc>
  <ol>
    <item>aaa</item>
    <item>bbb</item>
    <item>ccc</item>
    <item>ddd</item>
  </ol>
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-22">
      <source role="." file="number-22.xml"/>
   </environment>
   <environment name="number-23">
      <source role="." file="number-23.xml"/>
   </environment>
   <environment name="number-24">
      <source role="." file="number-24.xml"/>
   </environment>
   <environment name="number-25">
      <source role="." file="number-25.xml"/>
   </environment>
   <environment name="number-26">
      <source role="." file="number-26.xml"/>
   </environment>
   <environment name="number-27">
      <source role="." file="number-27.xml"/>
   </environment>
   <environment name="number-28">
      <source role="." file="number-28.xml"/>
   </environment>
   <environment name="number-29">
      <source role="." file="number-29.xml"/>
   </environment>
   <environment name="number-30">
      <source role="." file="number-30.xml"/>
   </environment>
   <environment name="number-31">
      <source role="." file="number-31.xml"/>
   </environment>
   <environment name="number-32">
      <source role="." file="number-32.xml"/>
   </environment>
   <environment name="number-33">
      <source role="." file="number-33.xml"/>
   </environment>
   <environment name="number-34">
      <source role="." file="number-34.xml"/>
   </environment>
   <environment name="number-35">
      <source role="." file="number-35.xml"/>
   </environment>
   <environment name="number-36">
      <source role="." file="number-36.xml"/>
   </environment>
   <environment name="number-37">
      <source role="." file="number-37.xml"/>
   </environment>
   <environment name="number-38">
      <source role="." file="number-38.xml"/>
   </environment>
   <environment name="number-39">
      <source role="." file="number-39.xml"/>
   </environment>
   <environment name="number-40">
      <source role="." file="number-40.xml"/>
   </environment>
   <environment name="number-41">
      <source role=".">
         <content><![CDATA[<doc>
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-42">
      <source role="." file="number-42.xml"/>
   </environment>
   <environment name="number-43">
      <source role="." file="number-43.xml"/>
   </environment>
   <environment name="number-44">
      <source role=".">
         <content><![CDATA[<doc>
  <chapter>
    <note>aaa</note>
  </chapter>
  <chapter>
    <note>zzz</note>
  </chapter>
</doc>]]></content>
      </source>
   </environment>
   <environment name="number-45">
      <source role="." file="number-45.xml"/>
   </environment>
   <environment name="number-46">
      <source role="." file="number-46.xml"/>
   </environment>
   <environment name="number-47">
      <source role="." file="number-47.xml"/>
   </environment>

   <test-case name="number-0101">
      <description>&lt;xsl:number level="multiple" count="Parents|gkid|Child" value="position()" format="1.1 "/&gt;</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0101.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="numb01.out"/>
      </result>
   </test-case>

   <test-case name="number-0102">
      <description>Use start-at attribute new in 3.0</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0102.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="numb51.out"/>
      </result>
   </test-case>

   <test-case name="number-0103">
      <description>Use start-at attribute new in 3.0</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0103.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="numb52.out"/>
      </result>
   </test-case>

   <test-case name="number-0104">
      <description>Use start-at attribute new in 3.0</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0104.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="numb53.out"/>
      </result>
   </test-case>

   <test-case name="number-0105">
      <description>Use start-at attribute new in 3.0</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0105.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="numb54.out"/>
      </result>
   </test-case>

   <test-case name="number-0201">
      <description>PURPOSE</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0201.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0201.out"/>
      </result>
   </test-case>

   <test-case name="number-0301">
      <description>PURPOSE</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-03"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0301.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0301.out"/>
      </result>
   </test-case>

   <test-case name="number-0401">
      <description>Example from draft</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0401.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0401.out"/>
      </result>
   </test-case>

   <test-case name="number-0402">
      <description>test xsl:number level="any" when it cannot be optimized, because "count" is not known statically</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0402.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0402.out"/>
      </result>
   </test-case>

   <test-case name="number-0403">
      <description>test xsl:number with a pattern containing a variable reference</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0403.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0403.out"/>
      </result>
   </test-case>

   <test-case name="number-0404">
      <description>test xsl:number with value= a sequence</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0404.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>10,11,12,13,14,15,16,17,18,19,20</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0405">
      <description>CaseName: numbering04 Author: Paul Dick, based on example in spec Purpose: Test of level (any) and from attributes. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0405.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  
    (1) aaa
    (2) bbb
    (3) ccc
  
  
    (1) ddd
    (2) eee
    (3) fff
  
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0406">
      <description>CaseName: numbering06 Author: Paul Dick, based on example in spec Purpose: Test level=single specified explicitly SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0406.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  
    (1) aaa
    (2) bbb
    (3) ccc
  
  
    (1) ddd
    (2) eee
    (3) fff
  
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0407">
      <description>CaseName: numbering07 Author: David Marston Purpose: Simple test of non-alphanumeric separator SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0407.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  
    A aaa
    B bbb
    C ccc
  
  
    A ddd
    B eee
    C fff
  
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0501">
      <description>From example in draft</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-05"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0501.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0501.out"/>
      </result>
   </test-case>

   <test-case name="number-0601">
      <description>test number formatting</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-06"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0601.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>[0100]</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0602">
      <description>PURPOSE test group separation in number formatting</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-06"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0602.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1/00/00/00</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0603">
      <description>test Roman numbering</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-06"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0603.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>xiii;
        dcccxix;
        MCMXCIX;
        100000;
    </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0604">
      <description>test negative number formatting</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-06"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0604.xsl"/>
      </test>
      <result>
         <error code="XTDE0980"/>
      </result>
   </test-case>

   <test-case name="number-0701">
      <description>test numeric predicates in match patterns</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-07"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0701.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0701.out"/>
      </result>
   </test-case>

   <test-case name="number-0801">
      <description>test alpha numbering</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0801.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>m;
        aem;
        BXW;
        EQXD;
    </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0802">
      <description>test non-english numbering (relies on Numberer_de being present)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <languages_for_numbering value="de"/>
      </dependencies>
      <test>
         <stylesheet file="number-0802.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>drei;
        dreizehn;
        m;
        aem;
        BXW;
        EQXD;
    </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0803">
      <description>test run-time formatting</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0803.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>00/00/00/01/00/00/00</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0804">
      <description>test numbering in words</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0804.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z><z>OK</z></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0805">
      <description>test numbering of fractional value argument</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0805.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
        10 = 10;
        3.6 = 04;
        0 = 00;
        0.3 = 00;
        0.7 = 01;
        200 div 3 = 67;
    </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0806">
      <description>test level="any" when there are no matches</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0806.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>[];
    </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0807">
      <description>test formatting of a number larger than a 64-bit integer</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <maximum_number_of_decimal_digits value="101"/>
      </dependencies>
      <test>
         <stylesheet file="number-0807.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>[10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0808">
      <description>test ordinal numbering in words</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0808.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0808.out"/>
      </result>
   </test-case>

   <test-case name="number-0809">
      <description>test ordinal numbering e.g. 1st, 2nd, 3rd</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0809.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0809.out"/>
      </result>
   </test-case>

   <test-case name="number-0810">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0810.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<doc>*1*</doc>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0811">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0811.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<doc>1</doc>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0812">
      <description>test numbering in German words</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <languages_for_numbering value="de"/>
      </dependencies>
      <test>
         <stylesheet file="number-0812.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0812.out"/>
      </result>
   </test-case>

   <test-case name="number-0813">
      <description>test ordinal numbering in German words</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <languages_for_numbering value="de"/>
      </dependencies>
      <test>
         <stylesheet file="number-0813.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0813.out"/>
      </result>
   </test-case>

   <test-case name="number-0814">
      <description>xsl:number applied to empty sequence, with and without backwards compatibility</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0814.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><v2/><v1>NaN</v1></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0815">
      <description>xsl:number applied to non-number, with backwards compatibility &lt;v2&gt;&lt;xsl:number value="$empty" format="[1]"/&gt;&lt;/v2&gt;</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0815.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><v1>NaN</v1></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0816">
      <description>the first and last non-alpha tokens are *not* separator tokens, and shouldn't be used when there are fewer tokens than numbers to be formatted</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0816.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<a>(5.6.7.8)</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0817">
      <description>the first non-alpha token is a separator tokens if it appears between two formatting tokens</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0817.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<a>5;6;7;8)</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0818">
      <description>test xsl:number level="any" with a count pattern that matches the root of a non-document tree</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0818.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<z>5</z>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0819">
      <description>Numbering using circled digits</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0819.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0819.out"/>
      </result>
   </test-case>

   <test-case name="number-0820">
      <description>Numbering using parenthesized digits</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0820.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0820.out"/>
      </result>
   </test-case>

   <test-case name="number-0821">
      <description>Numbering using digit-full-stop characters</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0821.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0821.out"/>
      </result>
   </test-case>

   <test-case name="number-0822">
      <description>Use a non-BMP character as a grouping separator</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0822.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema">1&#65792;234&#65792;567</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-0823">
      <description>Error case, context item for xsl:number is an atomic value</description>
      <created by="Michael Kay (from a bug report from Ken Holman)"
               on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0823.xsl"/>
      </test>
      <result>
         <error code="XTTE0990"/>
      </result>
   </test-case>

   <test-case name="number-0824">
      <description>Error case, context item for xsl:number is undefined</description>
      <created by="Michael Kay (from a bug report from Ken Holman)"
               on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0824.xsl"/>
      </test>
      <result>
         <error code="XTTE0990"/>
      </result>
   </test-case>

   <test-case name="number-0825">
      <description>Error case, invalid lang attribute, detected statically</description>
      <created by="Michael Kay " on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0825.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="number-0826">
      <description>Error case, invalid lang attribute, detected dynamically</description>
      <created by="Michael Kay " on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0826.xsl"/>
      </test>
      <result>
         <error code="XTDE0030"/>
      </result>
   </test-case>

   <test-case name="number-0827">
      <description>xsl:number applied to non-number, without backwards compatibility &lt;v1 xsl:version="1.0"&gt;&lt;xsl:number value="$empty"/&gt;&lt;/v1&gt;</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-0827.xsl"/>
      </test>
      <result>
         <error code="XTDE0980"/>
      </result>
   </test-case>

   <test-case name="number-0901">
      <description>CaseName: collation01 Author: David Marston Purpose: Test of greek-numeral "traditional" sequence. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-09"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <combinations_for_numbering value="format:α letter-value:traditional"/>
      </dependencies>
      <test>
         <stylesheet file="number-0901.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0901.out"/>
      </result>
   </test-case>

   <test-case name="number-0902">
      <description>CaseName: numbering14 Author: David Marston Purpose: Test of greek-numeral "alphabetic" sequence. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-09"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <combinations_for_numbering value="format:α letter-value:alphabetic"/>
      </dependencies>
      <test>
         <stylesheet file="number-0902.xsl"/>
      </test>
      <result>
         <assert-xml file="number-0902.out"/>
      </result>
   </test-case>

   <test-case name="number-1001">
      <description>XSLT 2.0: test use of select attribute of xsl:number</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-10"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
    [3]
    [xiii]
  </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1101">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-11"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<o xmlns:msp="urn:us:gov:ic:msp">
Test using attribute nodes:
Found source 1
Found source 2

Test using element nodes:
Found source 1
Found source 2
</o>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1102">
      <description>Test xsl:number level="single" applied to attribute nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-11"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1102.xsl"/>
      </test>
      <result>
         <assert-xml file="number-1102.out"/>
      </result>
   </test-case>

   <test-case name="number-1201">
      <description>the first non-alpha token is a separator tokens if it appears between two formatting tokens</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>(1.3.3.1)</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1301">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-13"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<list><number>1</number><number>2<nonumber/></number><number>3</number></list>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1401">
      <description>Tests level="any" with a union pattern in the count attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-14"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<list><number first="true">1</number><number>2<nonumber first="true"/></number><number first="true">3</number></list>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1501">
      <description>test xsl:number level="any" with a count pattern that matches the document root node</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<z><n>2</n><n>3</n><n>7</n><n>31</n><n>150</n><n>192</n><n>225</n><n>271</n></z>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1502">
      <description>test xsl:number level="any" with a from pattern that doesn't match any preceding or ancestor node</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1502.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<z><n>2</n><n>3</n><n>1</n><n>1</n><n>1</n><n>1</n><n>1</n><n>1</n></z>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1601">
      <description>Test case submitted on SourceForge saxon-help forum on 2008-01-23 by joelfisler. Tests use of a local variable in the count pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-16"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1601.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>(1) 
    <out>(1) blabla</out>
    <out>(1.1) </out>
    <out>(1) flamingo</out>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1701">
      <description>Test use of current() in the count pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-17"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1701.xsl"/>
      </test>
      <result>
         <assert-xml file="number-1701.out"/>
      </result>
   </test-case>

   <test-case name="number-1702">
      <description>Test use of current() in the from pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-17"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1702.xsl"/>
      </test>
      <result>
         <assert-xml file="number-1702.out"/>
      </result>
   </test-case>

   <test-case name="number-1801">
      <description>Test with level=any where the node being numbered matches both the from and count patterns. Strange results - see bug 5849.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-18"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1801.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<doc nr="">
  <a mark="true" nr="1"/>
  <a nr="2"/>
  <a nr="3"/>
  <a nr="4"/>
  <a mark="true" nr="1"/>
  <a nr="2"/>
  <a nr="3"/>
  <a nr="4"/>   
</doc>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-1901">
      <description>Use current() within the xsl:number/@count pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-19"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-1901.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[1
2
3]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2001">
      <description>CaseName: numbering01 Author: David Marston Purpose: Test of numbering of multi-level document with no attributes specified. SpecCitation: Rec="XSLT" Version="1.0" type="DocFrag" place="id(number)"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-20"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2001.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2001.out"/>
      </result>
   </test-case>

   <test-case name="number-2002">
      <description>CaseName: numbering03 Author: Paul Dick, based on example in spec Purpose: Test of level (multiple), count, format attributes. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-20"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2002.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2002.out"/>
      </result>
   </test-case>

   <test-case name="number-2003">
      <description>CaseName: numbering10 Author: David Marston Purpose: Test of format attributes that vary per level. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-20"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2003.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2003.out"/>
      </result>
   </test-case>

   <test-case name="number-2101">
      <description>CaseName: numbering02 Author: Paul Dick, based on example in spec Purpose: Test of simple numbering, no attributes specified. SpecCitation: Rec="XSLT" Version="1.0" type="DocFrag" place="id(number)"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-21"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1. aaa
2. bbb
3. ccc
4. ddd
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2201">
      <description>CaseName: numbering05 Author: Paul Dick, based on example in spec Purpose: Test of level (any) and nested from/count. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-22"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
1.1.1 

2.1.1 

2.1.2 

2.2.1 

2.2.2 

2.2.3 
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2301">
      <description>CaseName: numbering08 Author: David Marston Purpose: Test of leading zeroes in numbering. Last separator propagates. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-23"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2301.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2301.out"/>
      </result>
   </test-case>

   <test-case name="number-2401">
      <description>CaseName: numbering09 Author: David Marston, based on example in spec Purpose: Test of value attribute. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/p[1]/text()[3]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-24"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2401.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2401.out"/>
      </result>
   </test-case>

   <test-case name="number-2402">
      <description>CaseName: numbering79 Author: David Marston Purpose: Test of non-numeric assignment to value attribute. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2402.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2402.out"/>
      </result>
   </test-case>

   <test-case name="number-2501">
      <description>CaseName: numbering11 Author: David Marston Purpose: Test of grouping attributes. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2501.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2501.out"/>
      </result>
   </test-case>

   <test-case name="number-2502">
      <description>CaseName: numbering80 Author: David Marston Purpose: Test of grouping attributes. If only one of the two is present, it is ignored. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2502.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2502.out"/>
      </result>
   </test-case>

   <test-case name="number-2503">
      <description>CaseName: numbering81 Author: David Marston Purpose: Test of grouping attributes. If only one of the two is present, it is ignored. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2503.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2503.out"/>
      </result>
   </test-case>

   <test-case name="number-2504">
      <description>Test of grouping attributes. Use a grouping-separator that is not likely to be in the environment's locale settings. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2504.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2504.out"/>
      </result>
   </test-case>

   <test-case name="number-2505">
      <description>CaseName: numbering95 Test of grouping attributes. Ensure that grouping-separator can be a space. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2505.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2505.out"/>
      </result>
   </test-case>

   <test-case name="number-2506">
      <description>test xsl:number with different values of lang attribute in a single run</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-25"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2506.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2506.out"/>
      </result>
   </test-case>

   <test-case name="number-2601">
      <description>CaseName: numbering12 Author: David Marston Purpose: Test of alphabetic "numbering" sequence. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-26"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2601.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2601.out"/>
      </result>
   </test-case>

   <test-case name="number-2602">
      <description>CaseName: numbering13 Author: David Marston Purpose: Test of roman-numeral "numbering" sequence. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-26"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2602.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2602.out"/>
      </result>
   </test-case>

   <test-case name="number-2701">
      <description>CaseName: numbering17 Author: David Marston Purpose: Test of proper formation of Roman numerals. SpecCitation: Rec="XSLT" VersionDrop="1.1"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-27"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2701.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2701.out"/>
      </result>
   </test-case>

   <test-case name="number-2801">
      <description>CaseName: numbering18 Author: David Marston Purpose: Test of node numbering before and after the nodes specified in from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2801.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2801.out"/>
      </result>
   </test-case>

   <test-case name="number-2802">
      <description>CaseName: numbering19 Author: David Marston Purpose: Test of node numbering before and after the nodes specified in from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2802.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2802.out"/>
      </result>
   </test-case>

   <test-case name="number-2803">
      <description>CaseName: numbering20 Author: David Marston Purpose: Test of node numbering before and after the nodes specified in from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2803.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2803.out"/>
      </result>
   </test-case>

   <test-case name="number-2804">
      <description>CaseName: numbering52 Author: David Marston Purpose: Test xsl:number with a filtered count pattern, from defaulted, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2804.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
: bbb
2: ccc
1: ddd
: eee
2: fff
: ggg
3: hhh
: iii
1: jjj
: kkk
2: lll
4: mmm
: nnn
5: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2805">
      <description>CaseName: numbering53 Author: David Marston Purpose: Test xsl:number with from and count defaulted, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2805.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2806">
      <description>CaseName: numbering54 Author: David Marston Purpose: Test xsl:number with from and count defaulted, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2806.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2807">
      <description>CaseName: numbering55 Author: David Marston Purpose: Test xsl:number with count on same level, from defaulted, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2807.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2808">
      <description>CaseName: numbering56 Author: David Marston Purpose: Test xsl:number with count from higher level, from defaulted, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2808.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>: aaa
: bbb
: ccc
1: ddd
1: eee
1: fff
: ggg
: hhh
: iii
2: jjj
2: kkk
2: lll
: mmm
: nnn
: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2809">
      <description>CaseName: numbering57 Author: David Marston Purpose: Test xsl:number with count specifying same and higher level, from defaulted, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2809.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>: aaa
: bbb
: ccc
1: ddd
2: eee
3: fff
: ggg
: hhh
: iii
1: jjj
2: kkk
3: lll
: mmm
: nnn
: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2810">
      <description>CaseName: numbering58 Author: David Marston Purpose: Test xsl:number with a filtered count pattern, from defaulted, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2810.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
: bbb
2: ccc
1: ddd
: eee
2: fff
: ggg
3: hhh
: iii
1: jjj
: kkk
2: lll
4: mmm
: nnn
5: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2811">
      <description>CaseName: numbering64 Author: David Marston Purpose: Test xsl:number with count on same level, from is next higher level, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2811.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2812">
      <description>CaseName: numbering75 Author: David Marston Purpose: Test xsl:number with level=multiple, from specifies two levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2812.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2813">
      <description>CaseName: numbering76 Author: David Marston Purpose: Test xsl:number with count on same level, from is two higher levels, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2813.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1: aaa
2: bbb
3: ccc
1: ddd
2: eee
3: fff
4: ggg
5: hhh
6: iii
1: jjj
2: kkk
3: lll
7: mmm
8: nnn
9: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2814">
      <description>CaseName: numbering84 Author: David Marston Purpose: Count non-existant nodes, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-28"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2814.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>: aaa
: bbb
: ccc
: ddd
: eee
: fff
: ggg
: hhh
: iii
: jjj
: kkk
: lll
: mmm
: nnn
: ooo
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-2901">
      <description>CaseName: numbering21 Author: David Marston Purpose: Test of level (any) and counting only some nodes. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-29"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2901.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2901.out"/>
      </result>
   </test-case>

   <test-case name="number-2902">
      <description>CaseName: numbering22 Author: David Marston Purpose: Test of level (single) and counting only some nodes. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-29"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-2902.xsl"/>
      </test>
      <result>
         <assert-xml file="number-2902.out"/>
      </result>
   </test-case>

   <test-case name="number-3001">
      <description>CaseName: numbering23 Author: David Marston Purpose: Test of value attribute with popular "of n" format. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[1]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-30"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3001.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3001.out"/>
      </result>
   </test-case>

   <test-case name="number-3002">
      <description>CaseName: numbering24 Author: David Marston Purpose: Number without value= inside sorted for-each. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-30"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3002.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3002.out"/>
      </result>
   </test-case>

   <test-case name="number-3003">
      <description>CaseName: numbering26 Author: David Marston Purpose: Numbering comes from sorted order if value attribute used. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-30"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3003.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3003.out"/>
      </result>
   </test-case>

   <test-case name="number-3101">
      <description>CaseName: numbering25 Author: David Marston Purpose: Number without value= inside template called within sorted for-each. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-31"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3101.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3101.out"/>
      </result>
   </test-case>

   <test-case name="number-3201">
      <description>CaseName: numbering27 Author: David Marston Purpose: Test of numbering of multi-level document, level=multiple and default from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3201.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3201.out"/>
      </result>
   </test-case>

   <test-case name="number-3202">
      <description>CaseName: numbering28 Author: David Marston Purpose: Test of numbering of multi-level document, level=single and default from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3202.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3202.out"/>
      </result>
   </test-case>

   <test-case name="number-3203">
      <description>CaseName: numbering29 Author: David Marston Purpose: Test of numbering of multi-level document, level=any and default from. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3203.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3203.out"/>
      </result>
   </test-case>

   <test-case name="number-3204">
      <description>CaseName: numbering30 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3204.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3204.out"/>
      </result>
   </test-case>

   <test-case name="number-3205">
      <description>CaseName: numbering31 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3205.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3205.out"/>
      </result>
   </test-case>

   <test-case name="number-3206">
      <description>CaseName: numbering32 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one, watching for confusion with default (.) separator. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3206.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3206.out"/>
      </result>
   </test-case>

   <test-case name="number-3207">
      <description>CaseName: numbering33 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3207.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3207.out"/>
      </result>
   </test-case>

   <test-case name="number-3208">
      <description>CaseName: numbering34 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one, with default (.) elsewhere in format. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3208.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3208.out"/>
      </result>
   </test-case>

   <test-case name="number-3209">
      <description>CaseName: numbering35 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3209.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3209.out"/>
      </result>
   </test-case>

   <test-case name="number-3210">
      <description>CaseName: numbering36 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3210.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3210.out"/>
      </result>
   </test-case>

   <test-case name="number-3211">
      <description>CaseName: numbering37 Author: David Marston Purpose: Test xsl:number formatting separators, with extra characters that look the same. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3211.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3211.out"/>
      </result>
   </test-case>

   <test-case name="number-3212">
      <description>CaseName: numbering38 Author: David Marston Purpose: Test xsl:number formatting separators, with extra characters that look the same. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3212.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3212.out"/>
      </result>
   </test-case>

   <test-case name="number-3213">
      <description>CaseName: numbering39 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one, with extra characters that look the same. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3213.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3213.out"/>
      </result>
   </test-case>

   <test-case name="number-3214">
      <description>CaseName: numbering40 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3214.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3214.out"/>
      </result>
   </test-case>

   <test-case name="number-3215">
      <description>CaseName: numbering41 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one (which is the last one between). SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3215.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3215.out"/>
      </result>
   </test-case>

   <test-case name="number-3216">
      <description>CaseName: numbering42 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3216.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3216.out"/>
      </result>
   </test-case>

   <test-case name="number-3217">
      <description>CaseName: numbering43 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3217.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3217.out"/>
      </result>
   </test-case>

   <test-case name="number-3218">
      <description>CaseName: numbering44 Author: David Marston Purpose: Test xsl:number formatting separators, propagating last one. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3218.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3218.out"/>
      </result>
   </test-case>

   <test-case name="number-3219">
      <description>CaseName: numbering46 Author: David Marston Purpose: Test xsl:number formatting separators, with multiple characters in between numbering tokens. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3219.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3219.out"/>
      </result>
   </test-case>

   <test-case name="number-3220">
      <description>CaseName: numbering47 Author: David Marston Purpose: Establish that the default for level is single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[1]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3220.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3220.out"/>
      </result>
   </test-case>

   <test-case name="number-3221">
      <description>CaseName: numbering48 Author: David Marston Purpose: Count only top-level changes but number all the way down, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3221.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3221.out"/>
      </result>
   </test-case>

   <test-case name="number-3222">
      <description>CaseName: numbering49 Author: David Marston Purpose: Count only bottom-level changes but number all the way down, level=any. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3222.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3222.out"/>
      </result>
   </test-case>

   <test-case name="number-3223">
      <description>CaseName: numbering50 Author: David Marston Purpose: Allow level to default to single and count top-level items all the way down. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[1]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3223.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3223.out"/>
      </result>
   </test-case>

   <test-case name="number-3224">
      <description>CaseName: numbering51 Author: David Marston Purpose: Test xsl:number with from and count defaulted but level=any. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3224.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3224.out"/>
      </result>
   </test-case>

   <test-case name="number-3225">
      <description>CaseName: numbering61 Author: David Marston Purpose: Test of numbering of multi-level document, level=any, from specifies middle level. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3225.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3225.out"/>
      </result>
   </test-case>

   <test-case name="number-3226">
      <description>CaseName: numbering62 Author: David Marston Purpose: Count one level of changes and number below there, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3226.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3226.out"/>
      </result>
   </test-case>

   <test-case name="number-3227">
      <description>CaseName: numbering63 Author: David Marston Purpose: Count all levels of changes and number by level, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3227.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3227.out"/>
      </result>
   </test-case>

   <test-case name="number-3228">
      <description>CaseName: numbering65 Author: David Marston Purpose: Test of numbering of multi-level document with specified from level, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3228.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3228.out"/>
      </result>
   </test-case>

   <test-case name="number-3229">
      <description>CaseName: numbering77 Author: David Marston Purpose: Test of numbering of multi-level document with two from levels, level=multiple. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3229.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3229.out"/>
      </result>
   </test-case>

   <test-case name="number-3230">
      <description>CaseName: numbering82 Author: David Marston Purpose: Count non-existant nodes, level=single. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3230.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3230.out"/>
      </result>
   </test-case>

   <test-case name="number-3231">
      <description>CaseName: numbering83 Author: David Marston Purpose: Count non-existant nodes, level=any. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-32"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3231.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3231.out"/>
      </result>
   </test-case>

   <test-case name="number-3301">
      <description>CaseName: numbering45 Author: David Marston Purpose: Test more than one xsl:number counter active at the same time. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[1]/item[2]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-33"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3301.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3301.out"/>
      </result>
   </test-case>

   <test-case name="number-3401">
      <description>CaseName: numbering59 Author: David Marston Purpose: Test of level (any) and counting only some nodes, with from defaulted. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[1]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-34"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3401.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3401.out"/>
      </result>
   </test-case>

   <test-case name="number-3402">
      <description>CaseName: numbering60 Author: David Marston Purpose: Test of level (any) and counting only some nodes, from specifies next-higher level. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-34"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3402.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3402.out"/>
      </result>
   </test-case>

   <test-case name="number-3403">
      <description>CaseName: numbering70 Author: David Marston Purpose: Test of level (any) and counting only some nodes, from specifies two higher levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-34"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3403.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3403.out"/>
      </result>
   </test-case>

   <test-case name="number-3404">
      <description>CaseName: numbering71 Author: David Marston Purpose: Test of level (single) and counting only some nodes, from specifies two higher levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-34"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3404.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3404.out"/>
      </result>
   </test-case>

   <test-case name="number-3405">
      <description>CaseName: numbering90 Test counting only some nodes, with key() in count pattern. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-34"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3405.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3405.out"/>
      </result>
   </test-case>

   <test-case name="number-3501">
      <description>CaseName: numbering66 Author: David Marston Purpose: Test of numbering of multi-level document with specified from level, count filtered. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-35"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3501.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3501.out"/>
      </result>
   </test-case>

   <test-case name="number-3601">
      <description>CaseName: numbering67 Author: David Marston Purpose: Test xsl:number with with from set for two levels, level=any, count defaulted. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-36"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3601.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3601.out"/>
      </result>
   </test-case>

   <test-case name="number-3701">
      <description>CaseName: numbering68 Author: David Marston Purpose: Test xsl:number with from set for two levels, level=any. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-37"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3701.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3701.out"/>
      </result>
   </test-case>

   <test-case name="number-3702">
      <description>CaseName: numbering69 Author: David Marston Purpose: Test xsl:number with from set for two levels, level=any, counting two levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[3]/p[1]/text()[6]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-37"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3702.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3702.out"/>
      </result>
   </test-case>

   <test-case name="number-3801">
      <description>CaseName: numbering72 Author: David Marston Purpose: Test of level (single), from specifies two higher levels, count defaulted. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-38"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3801.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3801.out"/>
      </result>
   </test-case>

   <test-case name="number-3802">
      <description>CaseName: numbering73 Author: David Marston Purpose: Test of level (single), from specifies two higher levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-38"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3802.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3802.out"/>
      </result>
   </test-case>

   <test-case name="number-3901">
      <description>CaseName: numbering74 Author: David Marston Purpose: Test of level (single) and counting two types of nodes, from specifies two higher levels. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-39"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-3901.xsl"/>
      </test>
      <result>
         <assert-xml file="number-3901.out"/>
      </result>
   </test-case>

   <test-case name="number-4001">
      <description>CaseName: numbering78 Author: David Marston Purpose: Test of numbering of multi-level document with two from levels and filtering the lowest count level. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[2]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-40"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4001.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4001.out"/>
      </result>
   </test-case>

   <test-case name="number-4101">
      <description>CaseName: numbering85 Author: Paul Dick Purpose: Test that value attribute gets rounded correctly w/various formats. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[1]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-41"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4101.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4101.out"/>
      </result>
   </test-case>

   <test-case name="number-4201">
      <description>CaseName: numbering86 Namespaced elements should work just like non-namespaced ones. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-42"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4201.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4201.out"/>
      </result>
   </test-case>

   <test-case name="number-4202">
      <description>Namespaced elements should work just like non-namespaced ones even when prefixes in source document and stylesheet are different. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-42"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4202.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4202.out"/>
      </result>
   </test-case>

   <test-case name="number-4301">
      <description>CaseName: numbering87 Number the namespaced elements when mixed with non-namespaced ones. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-43"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4301.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4301.out"/>
      </result>
   </test-case>

   <test-case name="number-4401">
      <description>CaseName: numbering88 Show discrepancies between number and position. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-44"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  <chap number="1" position="2">aaa<sel number="1" position="1"/></chap>
  <chap number="2" position="4">zzz<sel number="2" position="1"/></chap>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-4402">
      <description>CaseName: numbering89 Show discrepancies between number and position. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-44"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4402.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4402.out"/>
      </result>
   </test-case>

   <test-case name="number-4501">
      <description>CaseName: numbering91 Test counting only some nodes, with id() in count pattern. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-45"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>(no) a(1) b(no) c(2) d(no) e(no) f(3) g(no) h</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="number-4601">
      <description>If the source document has a named default namespace, the counting (on xsl:number) should still work. SpecCitation: Rec="XSLT" Version="1.0" type="OASISptr1" place="id(number)/ulist[2]/item[1]/p[1]/text()[5]"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-46"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4601.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4601.out"/>
      </result>
   </test-case>

   <test-case name="number-4701">
      <description>test xsl:number with level="any", from="/"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="number-47"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="number-4701.xsl"/>
      </test>
      <result>
         <assert-xml file="number-4701.out"/>
      </result>
   </test-case>
</test-set>
