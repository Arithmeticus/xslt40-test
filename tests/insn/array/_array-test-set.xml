<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
   name="array">
   <description>Tests XSLT 4.0 extensions for arrays, notably the xsl:array instruction</description>
   
   <environment name="array-A">
      <source role="." file="../../strm/docs/transactions.xml"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT40+"/>
   </dependencies>
   
   <test-case name="array-001">
      <description>Simple test of xsl:array with a sequence constructor</description>
      <created by="Michael Kay" on="2016-12-19"/>
      <test>
         <stylesheet file="array-001.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/@count = '10'</assert>
            <assert>/out/@values = '1 2 3 4 5 6 7 8 9 10'</assert>
            <assert>/out/@last = '10'</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-001b">
      <description>Simple test of xsl:array with a sequence constructor, when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-001.xsl"/>
      </test>
      <result>
         <error code="XTDE1450"/>
      </result>
   </test-case>
   
   <test-case name="array-002">
      <description>Simple test of xsl:array with a select attribute</description>
      <created by="Michael Kay" on="2016-12-19"/>
      <test>
         <stylesheet file="array-002.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/@count = '10'</assert>
            <assert>/out/@values = '1 2 3 4 5 6 7 8 9 10'</assert>
            <assert>/out/@last = '10'</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-002b">
      <description>Simple test of xsl:array with a select attribute, when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-002.xsl"/>
      </test>
      <result>
         <error code="XTDE1450"/>
      </result>
   </test-case>
   
   <test-case name="array-003">
      <description>Nested arrays</description>
      <created by="Michael Kay" on="2016-12-19"/>
      <environment ref="array-A"/>
      <test>
         <stylesheet file="array-003.xsl"/>
         <output serialize="yes" tree="no"/>
      </test>
      <result>
         <assert-serialization>[["13.24","8.12"],["-15.00"],["6.00"],["0.50","2.33","4.44"],["-5.00"],["8.99"],["16.00"],["-2.33","5.60","4.32"],["6.78","12.20","-248.05"],["12.00","13.99"],["14.20"]]</assert-serialization>
      </result>
   </test-case>
   
   <test-case name="array-004">
      <description>Arrays containing sequences</description>
      <created by="Michael Kay" on="2017-01-11"/>
      <test>
         <stylesheet file="array-004.xsl"/>
      </test>
      <result>
         <assert>/out[@ok="true"]</assert>
      </result>
   </test-case>
   
   <test-case name="array-005">
      <description>Arrays containing sequences</description>
      <created by="Michael Kay" on="2017-01-11"/>
      <test>
         <stylesheet file="array-005.xsl"/>        
      </test>
      <result>
         <assert>/out[@ok="true"]</assert>
      </result>
   </test-case>
   
   <test-case name="array-006">
      <description>Arrays containing sequences</description>
      <created by="Michael Kay" on="2017-01-11"/>
      <test>
         <stylesheet file="array-006.xsl"/>        
      </test>
      <result>
         <assert>/out[@ok="true"]</assert>
      </result>
   </test-case>
 
   <test-case name="array-007">
      <description>Streaming with arrays - Saxon bug 3599 - streaming on</description>
      <created by="Michael Kay" on="2018-01-05"/>
      <environment>
         <source file="array-007.xml" role="." streaming="true"/>
      </environment>
      <dependencies>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="array-007.xsl"/>
         <param name="STREAMABLE" static="yes" select="true()"/>
      </test>
      <result>
         <all-of>
            <assert>contains(/out, '"cities":["Milano","Venezia"]')</assert>
            <assert>contains(/out, '"cities":["Paris","Lyon"]')</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-008">
      <description>Streaming with arrays - Saxon bug 3599 - streaming off</description>
      <created by="Michael Kay" on="2018-01-05"/>
      <environment>
         <source file="array-007.xml" role="." streaming="true"/>
      </environment>
      <dependencies>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="array-007.xsl"/>
         <param name="STREAMABLE" static="yes" select="false()"/>
      </test>
      <result>
         <all-of>
            <assert>contains(/out, '"cities":["Milano","Venezia"]')</assert>
            <assert>contains(/out, '"cities":["Paris","Lyon"]')</assert>
         </all-of>
      </result>
   </test-case>
   
    <test-case name="array-009">
      <description>"for member" extension</description>
      <created by="Michael Kay" on="2019-04-03"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-009.xsl"/>
      </test>
      <result>
         <assert>/out = "2 3 4 5"</assert>
      </result>
   </test-case>
   
   <test-case name="array-009b">
      <description>"for member" extension, when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-009.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="array-010">
      <description>xsl:array with grouping</description>
      <created by="Michael Kay" on="2023-03-23"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-010.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(xs:integer*)</assert-type>
            <assert-deep-eq>[(0,1,2,3), (4,5,6,7), (8,9,10,11), (12,13,14,15), (16,17,18,19)]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-011">
      <description>xsl:array with grouping</description>
      <created by="Michael Kay" on="2023-03-23"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-011.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(xs:integer*)</assert-type>
            <assert-deep-eq>[(0,1,2,3), (4,5,6,7), (8,9,10,11), (12,13,14,15), (16,17,18,19)]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-012">
      <description>xsl:array with grouping</description>
      <created by="Michael Kay" on="2023-03-23"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-012.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(xs:integer*)</assert-type>
            <assert-deep-eq>[(0,1,2,3), (4,5,6,7), (8,9,10,11), (12,13,14,15), (16,17,18,19)]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-013">
      <description>xsl:array used to sort and merge arrays</description>
      <created by="Michael Kay" on="2023-03-23"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-013.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(xs:integer*)</assert-type>
            <assert-deep-eq>[1,3,(1,2),(3,4),(1,2,3),(3,4,5)]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-014">
      <description>xsl:array used to invert a 2D array</description>
      <created by="Michael Kay" on="2023-03-23"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-014.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(array(xs:integer))</assert-type>
            <assert-deep-eq>[[0,10,20,30,40,50,60,70,80,90],[1,11,21,31,41,51,61,71,81,91],[2,12,22,32,42,52,62,72,82,92],[3,13,23,33,43,53,63,73,83,93],[4,14,24,34,44,54,64,74,84,94],[5,15,25,35,45,55,65,75,85,95],[6,16,26,36,46,56,66,76,86,96],[7,17,27,37,47,57,67,77,87,97],[8,18,28,38,48,58,68,78,88,98],[9,19,29,39,49,59,69,79,89,99]]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-015">
      <description>xsl:array/@use references local variable (and fn:current)</description>
      <created by="Michael Kay" on="2023-04-06"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-015.xsl"/>
         <output tree="no" result-var="result"/>
      </test>
      <result>
         <all-of>
            <assert-type>array(xs:integer*)</assert-type>
            <assert-deep-eq>[50, 40, 10, 30, 30, 20]</assert-deep-eq>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-020">
      <description>Iterate over an array</description>
      <created by="Michael Kay" on="2019-04-03"/>
      <modified by="Michael Kay" on="2023-03-23" change="reinstate with current syntax"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-020.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/in[1] = 1</assert>
            <assert>/out/in[2] = 11</assert>
            <assert>/out/in[3] = 10</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="array-020b">
      <description>Iterate over array, when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <modified by="Michael Kay" on="2023-03-23" change="reinstate with current syntax"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-020.xsl"/>
      </test>
      <result>
         <error code="XTDE1450"/>
      </result>
   </test-case>
   
   <test-case name="array-021">
      <description>saxon:for-each-member extension; type error, select must be an array</description>
      <created by="Michael Kay" on="2019-04-03"/>
      <modified by="Michael Kay" on="2023-03-23" change="reinstate with current syntax"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="array-021.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="array-022">
      <description>Iteration over arrays; JSON example</description>
      <created by="Michael Kay" on="2019-04-03"/>
      <modified by="Michael Kay" on="2023-03-23" change="reinstate with current syntax"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="array-022.xsl"/>
      </test>
      <result>
         <assert>/out = "RU TJ"</assert>
      </result>
   </test-case>
  
  <test-case name="array-023">
    <description>template matching array of atomic values</description>
    <created by="Michael Kay" on="2020-01-30"/>
    <modified by="Michael Kay" on="2023-03-23" change="reinstate with current syntax"/>
    <dependencies>
      <spec value="XSLT40+"/>
    </dependencies>
    <test>
      <stylesheet file="array-023.xsl"/>
    </test>
    <result>
      <assert>/out/L/I/D = '42'</assert>
    </result>
  </test-case>
   
   <test-case name="array-023b">
      <description>template matching array of atomic values, when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-023.xsl"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>
  
  <test-case name="array-024">
    <description>template matching array of maps (from JSON)</description>
    <created by="Michael Kay" on="2020-01-30"/>
    <dependencies>
      <spec value="XSLT30+"/>
    </dependencies>
    <test>
      <stylesheet file="array-024.xsl"/>
    </test>
    <result>
      <all-of>
        <assert>/out/AT/P[@first='Sue'][@last='Schreiber']</assert>
        <assert>/out/AT/P[@first='Debbie'][@last='Lockett']</assert>
      </all-of>
    </result>
  </test-case>
   
   <test-case name="array-024b">
      <description>template matching array of maps (from JSON), when not available</description>
      <created by="Debbie Lockett" on="2020-03-10"/>
      <dependencies>
         <spec value="XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="array-024.xsl"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>
   

   
</test-set>