<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="key">
   <description>Tests key</description>
   <environment name="key101">
      <source role="." file="key101.xml"/>
   </environment>
   <environment name="key105">
      <source role="." file="key105.xml"/>
   </environment>
   <environment name="key106">
      <source role=".">
         <content><![CDATA[<doc>
<a/>
<b/>
</doc>]]></content>
      </source>
   </environment>
   <environment name="key107">
      <source role=".">
         <content><![CDATA[<doc att="gulp">text1
  <a/>
  <b/>
</doc>]]></content>
      </source>
   </environment>
   <environment name="key110">
      <source role="." file="key110.xml"/>
   </environment>
   <environment name="key112">
      <source role="." file="key112.xml"/>
   </environment>
   <environment name="key113">
      <source role="." file="key113.xml"/>
   </environment>
   <environment name="key115">
      <source role="." file="key115.xml"/>
   </environment>
   <environment name="key116">
      <source role="." file="key116.xml"/>
   </environment>
   <environment name="key118">
      <source role="." file="key118.xml"/>
   </environment>
   <environment name="key127">
      <source role="." file="key127.xml"/>
   </environment>
   <environment name="key128">
      <source role="." file="key128.xml"/>
   </environment>
   <environment name="key129">
      <source role="." file="key129.xml"/>
   </environment>
   <environment name="key130">
      <source role="." file="key130.xml"/>
   </environment>
   <environment name="key131">
      <source role="." file="key131.xml"/>
   </environment>
   <environment name="key132">
      <source role="." file="key132.xml"/>
   </environment>
   <environment name="key134">
      <source role="." file="key134.xml"/>
   </environment>
   <environment name="key144">
      <source role="." file="key144.xml"/>
   </environment>
   <environment name="key145">
      <source role="." file="key145.xml"/>
   </environment>
   <environment name="key146">
      <source role="." file="key146.xml"/>
   </environment>
   <environment name="key147">
      <source role="." file="key147.xml"/>
   </environment>
   <environment name="key148">
      <source role="." file="key148.xml"/>
   </environment>
   <environment name="key149">
      <source role="." file="key149.xml"/>
   </environment>
   <environment name="key150">
      <source role=".">
         <content><![CDATA[<doc>
  <bind>HTTP</bind>
  <bind>SOAP</bind>
</doc>]]></content>
      </source>
   </environment>
   <environment name="key151">
      <source role=".">
         <content><![CDATA[<doc>
  <a>key151a.xml</a>
</doc>]]></content>
      </source>
   </environment>
   <environment name="key152">
      <source role="." file="key152.xml"/>
   </environment>
   <environment name="key159">
      <source role="." file="key159.xml"/>
   </environment>
   <environment name="key201">
      <source role="." file="key201.xml"/>
   </environment>
   <environment name="key202">
      <source role="." file="key202.xml"/>
   </environment>
   <environment name="key203">
      <source role="." file="key203.xml"/>
   </environment>
   <environment name="key206">
      <source role="." file="key206.xml"/>
   </environment>
   <environment name="key212">
      <source role="." file="key212.xml"/>
   </environment>
   <environment name="key213">
      <source role="." file="key213.xml"/>
   </environment>
   <environment name="key214">
      <source role="." file="key214.xml"/>
   </environment>
   <environment name="key215">
      <source role="." file="key215.xml"/>
   </environment>
   <environment name="key216">
      <source role="." file="key216.xml"/>
   </environment>
   <environment name="key218">
      <source role=".">
         <content><![CDATA[<t04>
  <a id="a" code="1" value="10"/>
  <a id="b" code="2" value="20"/>
  <a id="c" code="2" value="30"/>
  <a id="d" code="1" value="40"/>
</t04>]]></content>
      </source>
   </environment>
   <environment name="key219">
      <source role=".">
         <content><![CDATA[<t04>
  <a id="a" code="1" value="10"/>
  <a id="b" code="2" value="20"/>
  <a id="c" code="2" value="30"/>
  <a id="d" code="1" value="50"/>
</t04>]]></content>
      </source>
   </environment>
   <environment name="key223">
      <source role=".">
         <content><![CDATA[
<t04>
  <a id="a"/>
  <a id="b"/>
  <a id="c"/>
  <a id="d"/>
</t04>
]]></content>
      </source>
   </environment>
   <environment name="key224">
      <source role=".">
         <content><![CDATA[<Course>
    <Codes>
        <Code>709001</Code>
        <Code>752001</Code>
    </Codes>
    <Quota footnote="$#001">650</Quota>
</Course>]]></content>
      </source>
   </environment>
   <environment name="key225">
      <source role="." file="key225.xml"/>
   </environment>
   <environment name="key226">
      <source role="." file="key226.xml"/>
   </environment>
   <environment name="key227">
      <source role="." file="key227.xml"/>
   </environment>
   <environment name="key229">
      <source role=".">
         <content><![CDATA[<data>
<item id="a">10.00</item>
<item id="b">10.0</item>
<item id="c">15.3</item>
<item id="d">NaN</item>
<item id="e">0010</item>
</data>
]]></content>
      </source>
   </environment>
   <environment name="key230">
      <source role="." file="key230.xml"/>
   </environment>
   <environment name="key231">
      <source role=".">
         <content><![CDATA[<doc><chap name="s"/></doc>]]></content>
      </source>
   </environment>
   <environment name="key236">
      <source role="." file="key236.xml"/>
   </environment>
   <environment name="key241">
      <source role="." file="key241.xml"/>
   </environment>
   <environment name="key242">
      <source role="." file="key242.xml"/>
   </environment>
   <environment name="key303">
      <source role=".">
         <content><![CDATA[<a>
<b>John</b>
<b>Mary</b>
<b>James</b>
<b>Ann</b>
<b>Phil</b>
</a>]]></content>
      </source>
   </environment>
   <environment name="key306">
      <source role="." file="key306.xml"/>
   </environment>

   <test-case name="key-001">
      <description>Test generate-id() as used in grouping.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key101"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-001.xsl"/>
      </test>
      <result>
         <assert-xml file="key-001.out"/>
      </result>
   </test-case>

   <test-case name="key-002">
      <description>test use of third para of key() to select a subtree</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key101"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-002.xsl"/>
      </test>
      <result>
         <assert-xml file="key-002.out"/>
      </result>
   </test-case>

   <test-case name="key-003">
      <description>Test for xsl:key, where value of use is a string constant.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key105"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-003.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section SS Section Exp Section Num Section,Intro Section,</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-004">
      <description>Test for xsl:key, where value of use is an integer.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key105"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-004.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section,Exp Section,SS Section,Num Section</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-005">
      <description>Test of 'generate-id()' - ensure same node generates same ID.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key106"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-005.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>true</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-006">
      <description>Test of generate-id() uniqueness. All IDs should be different.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key107"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-006.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Success</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-007">
      <description>Test for match attribute being first in xsl:key.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-007.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section.SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-008">
      <description>Test for use attribute being first in xsl:key.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-008.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section.SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-009">
      <description>Test key() with a node-set as second argument. "When the second argument to key is of type node-set, then the result is the union of the result of applying the key function to the string value of each of the nodes in the argument node-set."</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-009.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section.SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-010">
      <description>Test for xsl:key and key() with a qualified name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-010.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root xmlns:baz="http://xsl.lotus.com/ns1">Intro Section. SS Section. Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-011">
      <description>Author: David Marston Purpose: Test for xsl:key being imported</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-011.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section. SS Section. Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-012">
      <description>Test for nested calls to key() function</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-012.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
  The next key finds three divisions:
  </root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-013">
      <description>Test for xsl:key and key() with a qualified name, different prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-013.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section. SS Section. Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-014">
      <description>Test for xsl:key and key() with a leading underscore in the name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key110"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-014.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section. SS Section. Exp Section.</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-015">
      <description>Test for xsl:key matching multiple keys on same node. "There can be multiple keys in a document with the same node, same key name, but different key values."</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key112"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-015.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section.SS Section.Exp Section.SS Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-016">
      <description>Test for xsl:key matching multiple nodes on same looked-up value. "There can be multiple keys in a document with the same key name, same key value, but different nodes."</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key113"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-016.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>4 divisions:
  Intro Section.SS Section.
  The next key finds two divisions:
  Exp Section.Second Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-017">
      <description>Test xsl:key where match nodes occur at different levels in the document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key115"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-017.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>3</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-018">
      <description>Test for three keyspaces using the same nodes as keys.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key116"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-018.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>Intro Section.SS Section.Exp Section.
Intro Section.SS Section.Exp Section.
SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-019">
      <description>David Marston --&gt; Purpose: Test for variable as first argument to key().</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key116"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-019.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
  Using keyspace bigspace...
  Intro Section.SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-020">
      <description>Test for three keyspaces, some being imported.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key116"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-020.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
bigspace...Intro Section.SS Section.Exp Section.
smallspace...Intro Section.SS Section.Exp Section.
filterspace...SS Section.Exp Section.</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-021">
      <description>Test combination of key() and document() as suggested in spec.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key118"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-021.xsl"/>
      </test>
      <result>
         <assert-xml file="key-021.out"/>
      </result>
   </test-case>

   <test-case name="key-022">
      <description>David Marston Purpose: Test whether blank keying (use) value works or is ignored.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key127"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-022.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section,SS Section,Exp Section,Untitled Section,Sort Section</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-023">
      <description>David Marston Purpose: Test whether blank keying (use) value works when it's an attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key128"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-023.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section,SS Section,Exp Section,Untitled Section,Sort Section</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-024">
      <description>Created by: David Marston Purpose: Use content of an element as the "use" value.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key129"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-024.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Introduction,Stylesheet Structure,Expressions,(none),Sorting</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-025">
      <description>Test that 'generate-id()' on various kinds of nodes yields unique values for each Get in position so we have nodes on the following axis. Build up a string containing generated IDs for nodes on the following axis, plus attributes they carry.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key130"/>
      <dependencies>
         <spec value="XSLT10+"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="key-025.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Number of IDs accumulated: 18</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-026">
      <description>Test of 'generate-id()' on namespace nodes Build up a string containing generated IDs for nodes on the namespace axes of self and all lower elements. Since call-template doesn't change context, iterate by position number.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key131"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="key-026.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Number of IDs accumulated: 10</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-027">
      <description>Use key() for sorting with apply-templates.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key132"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-027.xsl"/>
      </test>
      <result>
         <assert-xml file="key-027.out"/>
      </result>
   </test-case>

   <test-case name="key-028">
      <description>Use key() for sorting in for-each.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key132"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-028.xsl"/>
      </test>
      <result>
         <assert-xml file="key-028.out"/>
      </result>
   </test-case>

   <test-case name="key-029">
      <description>Test descendants of node-set from key().</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key134"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-029.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Intro Section.
Body of Intro.
Intro to SS subsection.
Body of SS Intro.
Intro to Appendix.
Body of App1.
Body of App2.
Body of App3sub.
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-030">
      <description>Test descendants of node-set from key() in a match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key134"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-030.xsl"/>
      </test>
      <result>
         <assert-xml file="key-030.out"/>
      </result>
   </test-case>

   <test-case name="key-031">
      <description>Test simple key()// filtered by a predicate, in a match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-031.xsl"/>
      </test>
      <result>
         <assert-xml file="key-031.out"/>
      </result>
   </test-case>

   <test-case name="key-032">
      <description>test key() in a template match pattern, with a variable reference, not the last step in the pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-032.xsl"/>
      </test>
      <result>
         <assert-xml file="key-032.out"/>
      </result>
   </test-case>

   <test-case name="key-033">
      <description>test key() in an xsl:key, with a variable reference, not the last step in the pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-033.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
   <match>Joshua</match>
   <no-match/>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-034">
      <description>test key() in an xsl:number pattern, with a variable reference, involves atomization, also part of a union pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-034.xsl"/>
      </test>
      <result>
         <assert-xml file="key-034.out"/>
      </result>
   </test-case>

   <test-case name="key-035">
      <description>test key() in an xsl:number pattern, with a variable reference, involves atomization, not the last step in the pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-035.xsl"/>
      </test>
      <result>
         <assert-xml file="key-035.out"/>
      </result>
   </test-case>

   <test-case name="key-036">
      <description>test key() in an xsl:for-each-group pattern, with a variable reference, involves atomization, last step in the pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-036.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
   <p>Lee Amby Jules</p>
   <p>Daniel Ted Joshua Lauren Pedro</p>
   <p>Nate Sam Pablo Ben Lucy Jake Jeff</p>
   <p>Christopher Jabriella</p>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-037">
      <description>test key() in an xsl:for-each-group pattern, with a variable reference in the key() call, and another in the use expression, involves atomization, last step in the pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key144"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-037.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
   <p>Lee Amby Jules Daniel Ted Joshua Lauren Pedro Nate Sam Pablo Ben Lucy Jake Jeff</p>
   <p>Christopher Jabriella</p>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-038">
      <description>Test complex key()// filtered by a predicate in predicate, in a match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key145"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-038.xsl"/>
      </test>
      <result>
         <assert-xml file="key-038.out"/>
      </result>
   </test-case>

   <test-case name="key-039">
      <description>Test complex key()//x in match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key146"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-039.xsl"/>
      </test>
      <result>
         <assert-xml file="key-039.out"/>
      </result>
   </test-case>

   <test-case name="key-040">
      <description>Test complex key()//x/x in match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key147"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-040.xsl"/>
      </test>
      <result>
         <assert-xml file="key-040.out"/>
      </result>
   </test-case>

   <test-case name="key-041">
      <description>Section: 5.2 Test complex key()//x/x, with complex predicate in match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key148"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-041.xsl"/>
      </test>
      <result>
         <assert-xml file="key-041.out"/>
      </result>
   </test-case>

   <test-case name="key-042">
      <description>Test generate-id() when nodes are coming from different documents. All IDs should be distinct. Get in position so we have nodes on the following axis. Build up a string containing generated IDs for nodes on the following axis, plus attributes they carry.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key149"/>
      <dependencies>
         <spec value="XSLT10+"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="key-042.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Number of IDs accumulated: 35</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-043">
      <description>Test combination of key() and document() reading from stylesheet. Elaboration: "Look-up table 1.6 is worth a close look because it uses an advanced XSLT technique. It builds up the lookup-table right in the stylesheet, using a distinct namespace. You can see the x:ns-to-binding elements right below the key. If you are familiar with keys, you are aware that they define indices that will be built on the nodes in the original source document that match the pattern in the match attribute. What is not as well known is that every time an additional source document is loaded with the XSLT document() function, all keys are applied to it as well. The xsl:variable...uses a special form of document() call to load the stylesheet itself as an additional source document. Thus the nodes in the stylesheet that match the ns-to-binding are indexed. This is a very useful technique for setting up a look-up table without having to hack at the source document or depend on an additional file." Lookup table 1.6: WSDL binding types</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key150"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-043.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  <bound>HTTP- http://schemas.xmlsoap.org/wsdl/http/</bound>
  <bound>SOAP- http://schemas.xmlsoap.org/wsdl/soap/</bound>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-044">
      <description>Test two calls to generate-id() on the same file. All IDs should be the same. If both filenames were given literally, the spec says that IDs must match. Retrieving the name from the principal XML document should still clearly mean the same file. Putting nodes in a variable is more of a gray area.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key151"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-044.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Success</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-045">
      <description>Test combination of key() and document() on multiple files.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key152"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-045.xsl"/>
      </test>
      <result>
         <assert-xml file="key-045.out"/>
      </result>
   </test-case>

   <test-case name="key-046">
      <description>Test xsl:key with union in "use" attribute. Changed by Michael Kay to supply the key values as strings rather than as numbers</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key159"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-046.xsl"/>
      </test>
      <result>
         <assert-xml file="key-046.out"/>
      </result>
   </test-case>

   <test-case name="key-047">
      <description>Test for xsl:key, and key() used to create hyperlinks</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key201"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-047.xsl"/>
      </test>
      <result>
         <assert-xml file="key-047.out"/>
      </result>
   </test-case>

   <test-case name="key-048">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key202"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-048.xsl"/>
      </test>
      <result>
         <assert-xml file="key-048.out"/>
      </result>
   </test-case>

   <test-case name="key-049">
      <description>Test for xsl:key pattern matching.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key203"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-049.xsl"/>
      </test>
      <result>
         <assert-xml file="key-049.out"/>
      </result>
   </test-case>

   <test-case name="key-050">
      <description>test a key whose value is a node-set, including duplicates</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key206"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-050.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><item>2<s>22</s></item>;
      <item>3<s>23</s><s>22</s></item>;
      <item>5<s>21</s><s>22</s><s>23</s><s>22</s></item>;
      </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-051">
      <description>test a key with a numeric predicate in the match pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key206"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-051.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><item>2<s>22</s></item>;
      </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-052">
      <description>test a key with a numeric predicate in the match pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key206"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-052.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-053">
      <description>test a key with a boolean predicate in the match pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key206"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-053.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><item>3<s>23</s><s>22</s></item>;
      <item>5<s>21</s><s>22</s><s>23</s><s>22</s></item>;
      </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-054">
      <description>test key() function with a node-set argument</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key212"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-054.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<list>aa,kk</list>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-055">
      <description>A classic 2-level Muenchian Grouping example (from Brian Magick of Compaq) for each distinct domain</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key213"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-055.xsl"/>
      </test>
      <result>
         <assert-xml file="key-055.out"/>
      </result>
   </test-case>

   <test-case name="key-056">
      <description>select every primary keyword only once this template should be invoced once for every keyword</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key214"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-056.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="key214.out"/>
      </result>
   </test-case>

   <test-case name="key-057">
      <description>Test that when there are multiple overlapping key definitions, the results are de-duplicated</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key215"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-057.xsl"/>
      </test>
      <result>
         <assert-serialization method="text" file="key215.out"/>
      </result>
   </test-case>

   <test-case name="key-058">
      <description>tests the use of current() within xsl:key. See Saxon bug 520552.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key216"/>
      <dependencies>
         <spec value="XSLT10+"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="key-058.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Namespace "http://aURI/" used in 1, 4
Namespace "http://bURI/" used in 2
Namespace "" used in 3
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-059">
      <description>tests the use of variables within xsl:key match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key216"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-059.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1 4</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-060">
      <description>tests the use of variables declared within xsl:key match pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key216"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-060.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1 4</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-061">
      <description>Test use of variables in a key match pattern (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key218"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-061.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out total="50"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-062">
      <description>Test use of variables in a key use expression (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key219"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-062.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out total-two="50" total-one="0"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-063">
      <description>Test use of key() in a key use expression (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key219"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-063.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out total-one="50" total-two="0"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-064">
      <description>Test use of key() in a key match expression (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key219"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-064.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out total-one="50" total-two="60"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-065">
      <description>test use of key() in pattern with a variable (XSLT 2.0 feature)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key223"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-065.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<d>
  [a]
  [b]
  [*c*]
  [d]
</d>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-066">
      <description>test case for a bug found in Saxon 6.5.2</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key224"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-066.xsl"/>
      </test>
      <result>
         <assert-xml file="key-066.out"/>
      </result>
   </test-case>

   <test-case name="key-067">
      <description>test xsl:key with decimal keys</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key225"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-067.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema">a,b,d,e</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-068">
      <description>test xsl:key with type=xs:double</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key226"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-068.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema">a,b,d,e,g</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-069">
      <description>test xsl:key with type=xs:dateTime test key matching on dateTime values Should select a, c, d</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key227"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-069.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema">a,c,d</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-070">
      <description>test xsl:key with type=xs:double using NaN as a key value</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key229"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-070.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-071">
      <description>test xsl:key with a multi-valued variable in a key() pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key230"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-071.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema"><item id="a">10.00</item><item id="d">NaN</item><item id="f">banana</item></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-072">
      <description>Saxon 7.4 bug submitted by Katarzyna Marszalek [km@toya.net.pl]</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key231"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-072.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<testing>true</testing>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-073">
      <description>test xsl:key containing variables in the use expression</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key236"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-073.xsl"/>
      </test>
      <result>
         <assert-xml file="key-073.out"/>
      </result>
   </test-case>

   <test-case name="key-074">
      <description>test key() function with three arguments</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key236"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-074.xsl"/>
      </test>
      <result>
         <assert-xml file="key-074.out"/>
      </result>
   </test-case>

   <test-case name="key-075">
      <description>test xsl:key with two definitions of the same key</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key236"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-075.xsl"/>
      </test>
      <result>
         <assert-xml file="key-075.out"/>
      </result>
   </test-case>

   <test-case name="key-076">
      <description>Test that xml:id is recognized as an ID attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key241"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-076.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Expressions</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-077">
      <description>Test that xml:id is recognized in a temporary tree</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key242"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="key-077.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Damson</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-078">
      <description>Two xsl:key definitions with the same name matching overlapping node sets</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key242"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-078.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:tt="http://www.powerware.com/nz/tt" a="11" b="11"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-079">
      <description>Error: unknown key name as string literal</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key242"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-079.xsl"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="key-080">
      <description>Error: unknown key name as run-time expression</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key242"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-080.xsl"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="key-081">
      <description>test a key with a numeric type</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key303"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-081.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
   <one>
      <b>John</b>
      <b>Mary</b>
      <b>Phil</b>
   </one>
   <two/>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-082">
      <description>test a key with a content constructor rather than a use expression</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key303"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-082.xsl"/>
      </test>
      <result>
         <assert-xml file="key-082.out"/>
      </result>
   </test-case>

   <test-case name="key-083">
      <description>test a key with a numeric type in a template match pattern</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key303"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-083.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
   <four>John</four>
   <four>Mary</four>
   <five>James</five>
   <three>Ann</three>
   <four>Phil</four>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="key-084">
      <description>test a key whose match pattern declares local range variables</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="key306"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="key-084.xsl"/>
      </test>
      <result>
         <assert-xml file="key-084.out"/>
      </result>
   </test-case>
</test-set>
